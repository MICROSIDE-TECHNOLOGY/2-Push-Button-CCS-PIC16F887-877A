CCS PCM C Compiler, Version 5.115d, 1               29-ago.-23 13:59
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\victo\OneDrive\Documentos\X-TRAINER-hands-on\CCS\PIC16F\2-Push-Button-CCS-PIC16F887-877A\Proyecto\PIC16F887\Push Button.lst

               ROM used:   43 words (1%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           5 (1%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... Push Button.c
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /*
.................... ---------------------------------------------------------------------------
....................  Implementar el control de encendido y apagado de un LED mediante
....................  un botón pulsador.
.................... ---------------------------------------------------------------------------
.................... */
.................... 
.................... #include <16F887.h>                   //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
.................... 
.................... #list
.................... 
.................... #use delay ( clock=20Mhz, crystal )   //Tipo de oscilador y frecuencia dependiendo del microcontrolador 
.................... 
.................... #define LED PIN_A1                    //Asigna el pin A1 al LED del X-TRAINER
.................... #define BOTON PIN_A2                  //Asigna el pin A2 al boton BOOT del X-TRAINER
.................... 
.................... void main ( void ) {
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    03.6
0009:  MOVF   09,W
000A:  ANDLW  C0
000B:  MOVWF  09
000C:  BCF    03.6
000D:  BCF    1F.4
000E:  BCF    1F.5
000F:  MOVLW  00
0010:  BSF    03.6
0011:  MOVWF  08
0012:  BCF    03.5
0013:  CLRF   07
0014:  CLRF   08
0015:  CLRF   09
0016:  BCF    03.7
....................    set_tris_a ( 0b11111101 );         //Pin A1 como salida
0017:  MOVLW  FD
0018:  BSF    03.5
0019:  BCF    03.6
001A:  MOVWF  05
....................    
....................    while ( 1 ) {                      //Ciclo repetitivo
....................       if ( 0 == input ( BOTON ) ) {   //Lee el estado del boton
001B:  BSF    05.2
001C:  BCF    03.5
001D:  BTFSC  05.2
001E:  GOTO   024
....................          output_high ( LED );         //Si se presiona el boton enciende el LED
001F:  BSF    03.5
0020:  BCF    05.1
0021:  BCF    03.5
0022:  BSF    05.1
....................       } else {
0023:  GOTO   028
....................          output_low ( LED );          //De lo contrario el LED se apaga
0024:  BSF    03.5
0025:  BCF    05.1
0026:  BCF    03.5
0027:  BCF    05.1
....................       }
0028:  BSF    03.5
0029:  GOTO   01B
....................    }
.................... }
002A:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
