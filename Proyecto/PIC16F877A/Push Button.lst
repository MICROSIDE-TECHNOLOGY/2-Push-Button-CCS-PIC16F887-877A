CCS PCM C Compiler, Version 5.115d, 1               29-ago.-23 14:01
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\victo\OneDrive\Documentos\X-TRAINER-hands-on\CCS\PIC16F\2-Push-Button-CCS-PIC16F887-877A\Proyecto\PIC16F877A\Push Button.lst

               ROM used:   33 words (0%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           5 (1%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... Push Button.c
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /*
.................... ---------------------------------------------------------------------------
....................  Implementar el control de encendido y apagado de un LED mediante
....................  un botón pulsador.
.................... ---------------------------------------------------------------------------
.................... */
.................... 
.................... #include <16F877A.h>                //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #use delay ( clock=20Mhz, crystal ) //Tipo de oscilador y frecuencia dependiendo del microcontrolador 
.................... 
.................... #define LED PIN_A1                  //Asigna el pin A1 al LED del X-TRAINER
.................... #define BOTON PIN_A2                //Asigna el pin A2 al boton BOOT del X-TRAINER
.................... 
.................... void main ( void ) {
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
....................    set_tris_a ( 0b11111101 );       //Pin A1 como salida
000F:  MOVLW  FD
0010:  MOVWF  05
.................... 
....................    while (1) {                      //Ciclo repetitivo
....................       if ( 0 == input ( BOTON ) ) { //Lee el estado del boton
0011:  BSF    05.2
0012:  BCF    03.5
0013:  BTFSC  05.2
0014:  GOTO   01A
....................          output_high ( LED );       //Si se presiona el boton enciende el LED
0015:  BSF    03.5
0016:  BCF    05.1
0017:  BCF    03.5
0018:  BSF    05.1
....................       } else {
0019:  GOTO   01E
....................          output_low ( LED );        //De lo contrario el LED se apaga
001A:  BSF    03.5
001B:  BCF    05.1
001C:  BCF    03.5
001D:  BCF    05.1
....................       }
001E:  BSF    03.5
001F:  GOTO   011
....................    }
.................... }
0020:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
